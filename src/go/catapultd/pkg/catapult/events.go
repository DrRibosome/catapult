package catapult

import (
	"catapultd/pkg/gen/api"
)

// plannerEvent marker interface for events the planner can handle
//
// Events are generated by clients (connected python sessions) or executors.
// Events start with either "Client" or "Executor" to denote these cases.
type plannerEvent interface {
	isPlannerEvent()
}

// ExecutorFinTask indicates task completion (success or failure)
type ExecutorFinTask struct {
	ClientID   ClientID
	ExecutorID ExecutorID
	Result     *api.TaskResult
}

func (*ExecutorFinTask) isPlannerEvent() {}

type ExecutorConnect struct {
	Executor *Executor
}

func (*ExecutorConnect) isPlannerEvent() {}

type ExecutorDisconnect struct {
	Executor *Executor
}

func (*ExecutorDisconnect) isPlannerEvent() {}

// ExecutorPollTask executor ready for another task
type ExecutorPollTask struct {
	ClientID   ClientID
	ExecutorID ExecutorID
}

func (*ExecutorPollTask) isPlannerEvent() {}

type ClientConnect struct {
	Client *Client
}

func (*ClientConnect) isPlannerEvent() {}

type ClientDisconnect struct {
	Client *Client
}

func (*ClientDisconnect) isPlannerEvent() {}

// ClientAddTask received new task from client
type ClientAddTask struct {
	ClientID ClientID
	Task     *api.TaskSpec
}

func (*ClientAddTask) isPlannerEvent() {}
